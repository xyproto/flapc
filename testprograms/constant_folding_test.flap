// Test constant folding optimization

// Arithmetic
a := 2 + 3
println(a)  // Should be 5

b := 10 * 0
println(b)  // Should be 0

c := 100 / 10
println(c)  // Should be 10

d := 2 ** 3
println(d)  // Should be 8

// Comparisons
e := 5 > 3
println(e)  // Should be 1

f := 10 < 5
println(f)  // Should be 0

g := 7 == 7
println(g)  // Should be 1

// Logical
h := 1 and 1
println(h)  // Should be 1

i := 0 or 1
println(i)  // Should be 1

j := 1 xor 1
println(j)  // Should be 0

// Unary
k := -(5)
println(k)  // Should be -5

l := not 0
println(l)  // Should be 1

// Bitwise
m := 12 &b 10
println(m)  // Should be 8 (0b1100 & 0b1010 = 0b1000)

n := 12 |b 10
println(n)  // Should be 14 (0b1100 | 0b1010 = 0b1110)
