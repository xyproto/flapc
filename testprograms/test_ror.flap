// Test ROR (rotate right) operator
// ror operates on the integer part of float64 values
// Bits shifted out on the right come back on the left

// Rotate 2 (binary 10) right by 1: -> binary 1 = 1
result1 := 2 ror 1
println(result1)

// Rotate 10 (binary 1010) right by 1: -> binary 101 = 5
result2 := 10 ror 1
println(result2)

// Rotate by 0 (no change): 10
result3 := 10 ror 0
println(result3)

// Rotate 12 (binary 1100) right by 2: -> binary 11 = 3
result4 := 12 ror 2
println(result4)

// Rotate with truncation: 14.5 -> 14 (binary 1110) right by 1 -> binary 111 = 7
result5 := 14.5 ror 1
println(result5)
