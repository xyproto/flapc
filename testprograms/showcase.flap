// Flap Language Showcase - All Features Working!

printf("╔════════════════════════════════════╗\n")
printf("║   Flap Compiler Showcase v0.1.0   ║\n")
printf("╚════════════════════════════════════╝\n\n")

// 1. Variables and arithmetic
printf("→ Variables & Math\n")
x := 10.5
y := 3.14159
result := x * y
printf("  %v × %v = %v\n\n", x, y, result)

// 2. Match expressions (if/else replacement)
printf("→ Match Expressions\n")
score := 95.0
score > 90.0 {
    -> printf("  Score %v: Excellent!\n", score)
    ~> printf("  Score %v: Keep trying!\n", score)
}
printf("\n")

// 3. Lists and indexing
printf("→ Lists\n")
primes = [2.0, 3.0, 5.0, 7.0, 11.0]
printf("  Primes: count=%v, first=%v, third=%v\n\n", #primes, primes[0], primes[2])

// 4. Maps (hash maps)
printf("→ Maps\n")
ages = {1.0: 25.0, 2.0: 30.0, 3.0: 35.0}
printf("  Ages map: count=%v\n\n", #ages)

// 5. Membership testing with 'in'
printf("→ Membership Testing ('in' keyword)\n")
found := 5.0 in primes
not_found := 13.0 in primes
printf("  5 in primes: %b\n", found)
printf("  13 in primes: %b\n", not_found)

key_exists := 1.0 in ages
printf("  Key 1 in ages: %b\n\n", key_exists)

// 6. Lambdas
printf("→ Lambdas\n")
square := x => x * x
cube := x => x * x * x
printf("  square(4) = %v\n", square(4.0))
printf("  cube(3) = %v\n\n", cube(3.0))

// 7. Loops
printf("→ Loops\n")
printf("  First 3 primes: ")
@ p in [2.0, 3.0, 5.0]  max 100000 {
    printf("%v ", p)
}
printf("\n\n")

// 8. Format specifiers
printf("→ Format Specifiers\n")
pi := 3.14159265359
printf("  %%f: %f (full precision)\n", pi)
printf("  %%v: %v (smart format)\n", pi)
printf("  %%b: %b (boolean yes/no)\n", 1.0)
printf("  %%b: %b (boolean yes/no)\n\n", 0.0)

printf("╔════════════════════════════════════╗\n")
printf("║     All features working! 🚀       ║\n")
printf("╚════════════════════════════════════╝\n")

