// Test unsafe blocks with various return scenarios

// Test 1: Verify default behavior (no explicit return)
result1 := unsafe {
    rax <- 42
} {
    x0 <- 42
} {
    a0 <- 42
}

printf("Result (default): %.0f\n", result1)

// Test 2: Explicit rax return (same as default)
result2 := unsafe {
    rbx <- 999
    rax <- 123
    ret rax
} {
    x1 <- 999
    x0 <- 123
    ret x0
} {
    a1 <- 999
    a0 <- 123
    ret a0
}

printf("Result (explicit rax): %.0f\n", result2)

// Test 3: Return from different register with computation
result3 := unsafe {
    rax <- 10
    rbx <- 20
    rcx <- rax + rbx
    ret rcx
} {
    x0 <- 10
    x1 <- 20
    x2 <- x0 + x1
    ret x2
} {
    a0 <- 10
    a1 <- 20
    a2 <- a0 + a1
    ret a2
}

printf("Result (computed): %.0f\n", result3)
